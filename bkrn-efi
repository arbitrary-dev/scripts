#!/bin/sh

TMPDIR="${TMPDIR:-/tmp}"
BPATH="$TMPDIR/bkrn"
KPATH="/usr/src/linux"
LOG="$BPATH/bkrn.log"

modules_prepare() {
  mkdir -p "$BPATH"
	if [ ! -f "$BPATH/.config" ]; then
		if [ -f "$KPATH/.config" ]; then
			mv -v "$KPATH/.config" "$BPATH"
		else
			echo "There is no kernel .config in neither $BPATH nor $KPATH !"
			exit 1
		fi
	fi
	make -C "$KPATH" mrproper
  PATH="/usr/lib/ccache/bin:${PATH}" \
  CCACHE_DIR="/var/cache/ccache" \
	make -C $KPATH O=$BPATH modules_prepare
  cp -v "$BPATH/.config" "$KPATH/.config"
}

build() {
  mkdir -p "$BPATH"
	if [ ! -f "$BPATH/.config" ]; then
		if [ -f "$KPATH/.config" ]; then
			mv -v "$KPATH/.config" "$BPATH"
		else
			echo "There is no kernel .config in neither $BPATH nor $KPATH !"
			exit 1
		fi
	fi

  KNAME=`ls -ld /usr/src/linux | awk '{print $NF}'`

  printf "Cleaning up $KNAME... "
	make -C "$KPATH" mrproper &>"$LOG" && echo "done" || echo "FAILED"

  THREADS=`sed -nE 's/siblings\s+: ([0-9]+)/\1/p' /proc/cpuinfo | head -1`
  THREADS=$(($THREADS + 1))

  printf "Compiling $KNAME using $THREADS threads... "
  PATH="/usr/lib/ccache/bin:${PATH}" \
  CCACHE_DIR="/var/cache/ccache" \
  make -C "$KPATH" O="$BPATH" -j$THREADS &>>"$LOG"
  if (( ! $? )); then
    echo "done"
    emerge --ask --quiet-build @module-rebuild
  else
    echo "FAILED"
  fi
  cp -v "$BPATH/.config" "$KPATH/.config"
}

install() {
  if [ ! -d "$BPATH" ]; then
    echo "No $BPATH available!"
    return 1
  fi

  printf "Installing modules... "
	make -C "$KPATH" O="$BPATH" modules_install &>>"$LOG" && echo "done" || echo "FAILED"

	mount /boot
  echo "Installing kernel... "
  if make -C "$KPATH" O="$BPATH" install &>>"$LOG"; then
    K=`ls -t /boot/vmlinuz-* | head -1`
    cp -v "$K" /boot/EFI/boot/bootx64.efi
	fi
}

restore() {
	mount /mnt/efi
	cp $BKPATH/bootx64.efi /mnt/efi/efi/boot
	cp $BKPATH/initramfs.img /mnt/efi/efi/boot
	if [ $? -eq 0 ]; then
		echo "EFI restored!"
	fi
}

if [ "$1" == "" ]; then
	build
else
	$1
fi
