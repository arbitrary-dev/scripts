#!/bin/zsh

# In God We Trust â€ 
#
# A.D. MMXXIV

set -e

# Disables "no matches found" error
setopt +o nomatch

_press_space() {
  read -sk1 ?"Press [space] to continue... "
  printf "\e[80D\e[K"
}

_backup_boot() {
  for f in /boot/{config,initramfs,System,vmlinuz}*; do
    echo "Backing up $f..."
    mv -i "$f" "$f.old"
  done
}

_restore_boot() {
  for f in /boot/*.old; do
    local to="${f%.old}"
    echo "Restoring $to..."
    mv -i "$f" "$to"
  done
}

_bkrn() {
  local src=/usr/src/linux
  local name=`stat $src | head -1 | cut -d\  -f6`

  echo "Build kernel for $name"
  echo
  _press_space

  # prepare to build in /tmp

  local cfg=$src/.config
  local bdir=/tmp/kernel-build

  mkdir -p $bdir

  if [[ ! -f $bdir/.config && -f $cfg ]]; then
    echo "Moving $cfg to $bdir ..."
    mv $cfg $bdir &> /dev/null
    echo
  fi
  cfg=$bdir/${cfg##*/}

  pushd $src
  if read -q ?"Ask Mr. Proper to clean $src? "; then
    echo
    make mrproper
  fi
  echo

  # .config

  if [[ ! -f $cfg ]]; then
    echo "Enter path to previous ${cfg##*/} (/root/backup/.config-*):"

    local prev
    vared prev
    printf "\e[1A\e[K\e[1A\e[K"

    if [[ -f $prev ]]; then
      cp $prev $cfg
      echo "$prev has been copied to $cfg"
    elif [[ -n $prev ]]; then
      echo "$prev is not found!"
      echo
      _press_space
    fi
  fi

  # make oldconfig

  local clean_path="${${PATH//\/usr\/lib\/distcc\/bin:/}//\/usr\/lib\/ccache\/bin:/}"
  if [[ -f $cfg ]]; then
    echo "Update previous ${cfg##*/}"
    PATH=$clean_path make O=$bdir oldconfig
  fi

  # make menuconfig

  echo
  if [[ -f $cfg ]] && read -q ?"Make menuconfig? "; then
    PATH=$clean_path make O=$bdir menuconfig
  fi
  echo

  PATH=$clean_path make O=$bdir modules_prepare

  # make

  echo
  if [[ -f $cfg ]]; then
    case `read -ek ?"Build kernel ([y], [d]istcc or [c]cached)? "` in
      y) echo; time make O=$bdir -j4 ;;
      d) echo; time make O=$bdir -j21 -l4 CC=distcc ;;
      c) echo
         ccache -p | grep cache_dir\ =
         [[ $PATH != *ccache* ]] && export PATH="/usr/lib/ccache/bin:${PATH}"
         time make O=$bdir -j4 ;;
      ?) echo -n "\nSkipped.\n"
    esac
    echo
  fi

  if read -q ?"Rebuild modules? "; then
    echo
    emerge -q @module-rebuild
  fi
  echo

  make O=$bdir modules_install

  mount /boot &> /dev/null

  local old=/boot/old
  mkdir -p $old
  _backup_boot

  # initramfs
  if read -q ?"Build initramfs? "; then
    echo

    # Fix for genkernel:
    # ERROR: Cannot determine KERNEL_ARCH without $SUB!
    # ERROR: Cannot determine KERNEL_ARCH without $VER!
    if ! grep -q '^VERSION =' $bdir/Makefile; then
      printf "Applying patch for genkernel issue... "
      grep -E '^((|EXTRA)VERSION|(PATCH|SUB)LEVEL) =' $src/Makefile \
      >> $bdir/Makefile \
      && echo "done" \
      || echo "skipped"
    fi

    local susp_conf=/etc/suspend.conf
    local susp_resume=/usr/lib/suspend/resume

    if [[ -f $susp_conf && -f $susp_resume ]]; then
      # enable resume from hibernate

      local ovr=/var/lib/genkernel/overlay
      local lrc=/usr/share/genkernel/defaults/linuxrc

      cp $lrc{,.uswsusp}
      cat $lrc | awk '!n  { print "swsusp_resume() {\n\t/sbin/resume\n}\n"; --n } /^$/ { --n } 1' n=2 > $lrc.uswsusp

      mkdir -p $ovr/etc $ovr/sbin
      cp $susp_conf $ovr/etc
      cp $susp_resume $ovr/sbin

      if ! genkernel --kerneldir=$bdir --kernel-config=$cfg \
        --loglevel=3 \
        --linuxrc=$lrc.uswsusp --initramfs-overlay=$ovr \
        --firmware --compress-initramfs --compress-initramfs-type=lz4 \
        initramfs
      then
        _restore_boot
        exit 1
      fi
    else
      if ! genkernel --kerneldir=$bdir --kernel-config=$cfg \
        --loglevel=3 \
        --firmware --compress-initramfs --compress-initramfs-type=lz4 \
        initramfs
      then
        _restore_boot
        exit 1
      fi
    fi
  fi

  if ! make O=$bdir install; then
    _restore_boot
    exit 1
  fi

  echo
  mv /boot/*.old $old/
  grub-mkconfig -o /boot/grub/grub.cfg
  echo

  # Restore
  cp $cfg $src/${cfg##*/}

  echo "Done!"

  popd
}

_bkrn
