#!/bin/zsh

_press_space() {
  read -sk1 ?"Press [space] to continue... "
  printf "\e[80D\e[K"
}

grub-upd() {
  mount /boot &> /dev/null
  grub-mkconfig -o /boot/grub/grub.cfg
}

bkrn() {
  local wd=$(pwd)
  local src=/usr/src/linux
  local name=`stat $src | head -n1 | sed "s/.+'(.+)'/\1/"`

  echo "Build kernel for $name"
  echo
  _press_space

  # prepare to build in /tmp

  local cfg=$src/.config
  local bdir=/tmp/kernel-build

  mkdir -p $bdir

  if [[ ! -f $bdir/.config && -f $cfg ]]; then
    echo "Copying $cfg to $bdir ..."
    cp $cfg $bdir &> /dev/null
  fi
  cfg=$bdir/${cfg##*/}

  cd $src
  make mrproper

  # .config

  if [[ ! -f $cfg ]]; then
    echo "Enter path to previous ${cfg##*/} (/root/backup/.config-*):"

    local prev
    vared prev
    printf "\e[1A\e[K\e[1A\e[K"

    if [[ -f $prev ]]; then
      cp $prev $cfg
      echo "$prev has been copied to $cfg"
    elif [[ -n $prev ]]; then
      echo "$prev is not found!"
      echo
      _press_space
    fi
  fi

  # make silentoldconfig

  local wo_distcc=${PATH//\/usr\/lib\/distcc\/bin:/}
  if [[ -f $cfg ]]; then
    echo "Update previous ${cfg##*/}"
    PATH=$wo_distcc make O=$bdir silentoldconfig
  fi

  # make menuconfig

  local r=y
  echo
  if [[ -f $cfg ]]; then
    read -q r?"Make menuconfig? "
    echo
  fi
  [[ $r = y ]] && PATH=$wo_distcc make O=$bdir menuconfig

  PATH=$wo_distcc make O=$bdir modules_prepare

  # make

  echo
  if [[ -f $cfg ]]; then
    read -q r?"Build kernel? "
    echo
  fi
  # [[ $r = y ]] && time pump make O=$bdir -j21 -l4
  [[ $r = y ]] && time make O=$bdir -j4
  [[ $? != 0 ]] && return

  # initramfs

  # backup previous images
  local old=/boot/old
  mkdir -p $old
  for i in /boot/initramfs-*; do
    echo "Backup $i to $old"
    mv $i $old/$i.old
  done

  local susp_conf=/etc/suspend.conf
  local susp_resume=/usr/lib/suspend/resume

  if [[ -f $susp_conf && -f $susp_resume ]]; then
    # enable resume from hibernate

    local ovr=/var/lib/genkernel/overlay
    local lrc=/usr/share/genkernel/defaults/linuxrc

    cp $lrc{,.uswsusp}
    cat $lrc | awk '!n  { print "swsusp_resume() {\n\t/sbin/resume\n}\n"; --n } /^$/ { --n } 1' n=2 > $lrc.uswsusp

    mkdir -p $ovr/etc $ovr/sbin
    cp $susp_conf $ovr/etc
    cp $susp_resume $ovr/sbin

    genkernel --kerneldir=$bdir --kernel-config=$cfg --linuxrc=$lrc.uswsusp --initramfs-overlay=$ovr initramfs
  else
    genkernel --kerneldir=$bdir --kernel-config=$cfg initramfs
  fi

  # make @module-rebuild

  read -q ?"Rebuild modules? "
  if [[ $? = 0 ]]; then
    echo
    emerge -q @module-rebuild
  fi

  mount /boot &> /dev/null
  make O=$bdir modules_install
  make O=$bdir install

  # upd /boot

  echo
  mv /boot/*.old $old
  grub-upd
  echo

  # backup

  local bak_dir=~/backup
  local bak_file=.config-${name#*-}

  mkdir -p $bak_dir
  cp $cfg $src/${cfg##*/}
  cp $cfg $bak_dir/$bak_file

  [[ $? = 0 ]] && echo "${cfg##*/} backup was made at $bak_dir/$bak_file"
  echo "Done!"

  cd $wd
}

bkrn
