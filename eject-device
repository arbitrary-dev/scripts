#!/bin/sh

if (( ! $# )); then
  echo "Usage: ${0##*/} <directory|device>"
  exit
fi

if ! which hdparm >/dev/null 2>&1; then
  echo "'hdparm' is unavailable, but required to operate correctly."
  exit
fi

main_dev="`mount | grep $1 | head -1 | cut -d\  -f1`"
if [[ -z "$main_dev" ]]; then
  [[ "$1" = /dev/* ]] \
  && main_dev="$1" \
  || main_dev="/dev/$1"
fi
main_dev=${main_dev%%[0-9]*}
if [[ -e "$main_dev" ]]; then
  echo "Will eject $main_dev"
else
  echo "$1 is not mounted."
  exit 1
fi

usb_name=`udevadm info --query=path -n $main_dev | cut -d/ -f6`
usb=/sys/bus/usb/devices/$usb_name
name=`cat $usb/product`

sudo sh -c "
  printf 'Setting autosuspend for USB $usb_name... '
  echo auto > $usb/power/control
  echo 0 > $usb/power/autosuspend_delay_ms
  echo OK
"

_IFS=$IFS
IFS=$'\n'
mrecords=(`mount | grep $main_dev`)
IFS=$_IFS

for mr in "${mrecords[@]}"; do
  dev="`echo "$mr" | cut -d\  -f1`"
  dir="`echo "$mr" | cut -d\  -f3`"
  sudo sh -c "
    printf 'Unmounting $dir... '
    if umount $dev; then
      rm -d '$dir'
      echo OK
    else
      echo 'Unable to unmount $dev'
      exit 1
    fi
  " || exit 1
done

if ! sudo hdparm -S1 $main_dev 2>&1 | grep -q SG_IO; then
  printf "Spinning down $main_dev... "
  sleep 6
  echo OK
else
  sleep 3
fi

sudo sh -c "
  printf 'Unbinding USB $usb_name... '
  echo $usb_name > /sys/bus/usb/drivers/usb/unbind
  echo OK
"

echo "'$name' should be safe to eject now."
