#!/bin/zsh

# In God We Trust â€ 
#
# A.D. MMXXV

TMPDIR=${TMPDIR:-/tmp}
memo=${DOCS:-~/Documents}/memo

check_memo() {
	if [[ ! -f $memo ]]; then
		echo "No memo at $memo"
		exit 1
	fi
}

check() {
	if ! command -v $1 >/dev/null; then
		echo "No '$1' available!"
		exit 1
	fi
}

check_tmpdir() {
	if [ ! -w "$TMPDIR" ]; then
		echo "No writable TMPDIR!"
		exit 1
	fi
}

join_by() { local IFS="$1"; shift; echo "$*"; }

_copy() {
	echo
	read -q ans\?"Copy to clipboard? "
	_cleanup
	[ "$ans" = n ] && return 0
	printf "${1:gs/%/%%}" | (
		wl-copy                        &>/dev/null \
		|| termux-clipboard-set        &>/dev/null \
		|| xclip -selection clipboard  &>/dev/null \
		|| pbcopy                      &>/dev/null \
		|| exit 1
	) && echo "Copied!" \
	  || return 1
}

show() {
	echo
	local list="$1"
	local c=`echo -E "$list" | wc -l`
	if (( $c > 1 )); then
		echo "$list"
	elif [[ -n "$list" ]]; then
		local res=`echo -E "$list" | cut -d' ' -f2-`
		echo -e "$res"
		_copy "$res"
	else
		echo "No entries!"
	fi
}

# Clean this line and $1 lines above.
_cleanup() {
	printf "\r[K"

	local i=${1:-0}
	while (( "$i" > 0 )); do
		printf "[A\r[K"
		i=$(( $i - 1 ))
	done
}

_memo_get() {
	check_memo
	check gpg

	local list
	if (( ! $# )); then
		local list=(`gpg -qd $memo | cut -d' ' -f1`)
		echo
		echo ${list[@]}
	elif (( $# == 1 )); then
		# In case it shortcuts in a fail-loop:
		# gpg-connect-agent reloadagent /bye
		list="`gpg -qd --pinentry-mode error $memo 2>/dev/null | grep -iE ^$1`"
		if [ $? != 0 ]; then
			list="`gpg -qd $memo | grep -iE ^$1`"
			[ $? != 0 ] && exit 1
			_cleanup 2
		fi
		show "$list"
	else
		local q=`join_by \| $*`
		local list="`gpg -qd $memo | grep -iE ^$q`"
		show "$list"
	fi
}

_memo_edit() {
	check_memo
	check_tmpdir
	check shred

	local temp=$(
		cd $TMPDIR
		local f=`mktemp .memo_XXXX`
		echo $TMPDIR/$f
	)

	local pass
	read -s pass\?"GPG password: "
	echo

	gpg --batch --passphrase $pass -o $temp --yes -qd $memo
	if (( $? )); then
		shred -u $temp
		return 1
	fi
	vim $temp
	if (( $? )); then
		shred -u $temp
		echo Update cancelled.
		return 1
	fi
	gpg --batch --passphrase $pass -o $memo --yes -qc $temp
	local r=$?
	shred -u $temp
	(( ! $r )) && echo Memo updated!
}

case "$1" in
	--help|-h) echo "Usage: ${0##*/} --edit|-e | --help|-h | keys..." ;;
	--edit|-e) _memo_edit ;;
	*)         _memo_get "$@" ;;
esac
