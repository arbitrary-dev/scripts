#!/bin/sh

TMPDIR=${TMPDIR:-/tmp}
CURR=`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor`
MODES=(`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors`)

function _try_mode() {
  MODE=(`grep -oE "\b[a-z]*$1[a-z]*\b" <<< ${MODES[@]}`)
  if (( ${#MODE[@]} == 0 )); then
    echo "No such mode: $1"
    return 1
  elif (( ${#MODE[@]} > 1 )); then
    echo "There are ${#MODE[@]} power modes matching '*$1*':"
    for m in ${MODE[@]}; do
      echo "- $m"
    done
    read -p "Which one ? "
    _try_mode $REPLY
  elif [ "$MODE" == "$CURR" ]; then
    echo "Power mode '$MODE' is already set."
    return 1
  fi
}

if [ -n "$1" ]; then
  _try_mode $1 || exit 1
else
  echo "Power modes: `sed -E "s/$CURR/[\0]/" <<< ${MODES[@]}`"
  [ "$CURR" != "powersave" ] && MODE="powersave" || MODE="performance"
  read -p "Switch to $MODE? "
  if [[ "$REPLY" =~ ^(y|yes)$ ]]; then
    :
  elif [[ "$REPLY" =~ ^(n|no|)$ ]]; then
    exit 1
  else
    _try_mode $REPLY
  fi
fi

# CPU

for c in `ls -d /sys/devices/system/cpu/cpu[0-9]*`; do
  echo $MODE > $c/cpufreq/scaling_governor || exit 1
done
echo "CPU's set to '$MODE' mode."

# Bluetooth

if [ "$MODE" = "powersave" ]; then
  if pgrep bluetoothd >/dev/null && bluetoothctl info | grep -q "Connected: yes"; then
    echo
    echo "Unable to disable bluetooth, following devices connected:"
    bluetoothctl info | grep "Name:" | cut -d\  -f2-
  else
    rfkill block bluetooth || exit 1
    # TODO remove PCI?
    echo "Bluetooth disabled"
  fi
else
  rfkill unblock bluetooth || exit 1
  echo "Bluetooth enabled"
fi

# PCI devices

_join() {
  local IFS="$1"
  shift
  echo "$*"
}

if [ "$MODE" = "powersave" ]; then
  PCI_DVCS=()
  # Nvidia VGA
  PCI_DVCS+=(10de:1c8c)
  # Nvidia audio
  PCI_DVCS+=(10de:0fb9)
  # ThinkPad ethernet
  PCI_DVCS+=(8086:15bb)
  # Samsung netbook ethernet
  PCI_DVCS+=(10ec:8136)

  IFS=$'\r\n' PCI_DVCS=($(lspci -nn | sed -En "s/([^ ]+) [^:]+: (.+) \[(`_join \| ${PCI_DVCS[@]}`)\].*/\1 \2/p"))

  [ -n "$PCI_DVCS" ] && echo
  for d in "${PCI_DVCS[@]}"; do
    IFS=\  d=(echo $d)
    DEV=(/sys/bus/pci/devices/*${d[1]})
    NAME=${d[@]:2}
    echo 1 > $DEV/remove || exit 1
    echo "PCI device removed: $NAME"
  done
else
  echo 1 > /sys/bus/pci/rescan || exit 1
  echo "PCI devices rescanned."
fi

# Powertop

if [[ ! -f $TMPDIR/.powertop-tuned ]]; then
  echo
  powertop --auto-tune \
  && touch $TMPDIR/.powertop-tuned
fi
