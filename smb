#!/bin/sh

start() {
  TMPDIR=${TMPDIR:-/tmp}
  mkdir -p $TMPDIR/samba || return 1
  sudo chown nobody $TMPDIR/samba || return 1
  sudo chmod g+w $TMPDIR/samba || return 1
  sudo rc-service samba start || return 1
  local ip=`ifconfig | grep -A1 ^wl | tail -1 | awk '{print $2}'`
  local dir=`sed -nE 's/^\[(.+)]/\1/p' /etc/samba/smb.conf | tail -1`
  echo "//$ip/$dir"
}

stop() {
  sudo rc-service samba stop
}

connect() {
  if (( ! $# )); then
    cat <<EOF
Connects to Samba sharing instance.

Usage: ${0##*/} ${FUNCNAME[0]} <ip|fullpath>
where 'fullpath' is like: //<ip>/public
EOF
    return 1
  fi

  local mnt="/mnt/samba"
  local fullpath="$1"

  if [[ "$fullpath" != //* ]]; then
    if [[ "$1" =~ ^\.?[0-9]+$ ]]; then
      local iface=`ifconfig -s | grep -oE '^wl\S+'`
      local prefx=`ifconfig $iface | grep -oEm1 '[0-9]+\.[0-9]+\.[0-9]+\.' | head -1`
      local ip="$prefx${1#.}"
    else
      local ip="$1"
    fi
    fullpath="//$ip/public"
  fi

  sudo mkdir -p $mnt || return 1
  printf "Mounting $fullpath "
  sudo mount $fullpath $mnt || return 1
  echo "done"

  pushd $mnt
}

disconnect() {
  local mnt="/mnt/samba"
  [[ "$PWD" == $mnt* ]] && popd $mnt
  sudo umount $mnt || return 1
  sudo rm -d $mnt
}

if (( ! $# )); then
  funcs=(`declare -F | cut -d\  -f3 | tr '\n' '|'`)
  cat <<EOF
Samba sharing instance management.

Usage: ${0##*/} <${funcs%|}>
EOF
else
  cmds=(`declare -F | cut -d\  -f3 | sed -n "/^$1.*/p"`)
  if (( ${#cmds[@]} == 1 )); then
    shift
    $cmds "$@"
  elif (( ${#cmds[@]} > 1 )); then
    echo "Several commands matched:"
    for c in ${cmds[@]}; do echo $c; done
    exit 1
  else
    echo "No such command '$1'"
    exit 1
  fi
fi
